name: Publish Release

on:
  pull_request:
    #types:
    #  - closed

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter --version

      - name: Update Flutter version
        run: flutter upgrade

      - name: Install dependencies
        run: flutter pub get

      - name: Fetch last version
        id: fetch_last_version
        run: |
          git fetch --tags --prune
          last_tag=$(git describe --tags --abbrev=0 2>/dev/null)
          if [ -z "$last_tag" ]; then
            echo "{last_version}={1.0.0+1}" >> $GITHUB_OUTPUT
            echo "Last Version: 1.0.0+1"
          else
            echo "{last_version}={$last_tag}" >> $GITHUB_OUTPUT
            echo "Last Version: $last_version"
          fi
          
          
      - name: Get next version
        id: next_version
        run: |
          next_version = $(echo ${{ steps.fetch_last_version.outputs.last_version }} | awk -F. 'BEGIN{OFS="."}{$NF+=1;print}')
          echo "{next_version}={$next_version}" >> $GITHUB_OUTPUT
          echo "Next  Version: $next_version"
          
      #- name: Build APK
      #  run: flutter build apk --release

      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    tag_name: v${{ steps.next_version.outputs.next_version }}
      #    release_name: Release v${{ steps.next_version.outputs.next_version }}
      #    body: |
      #      Release v${{ steps.next_version.outputs.next_version }}
      #    draft: false
      #    prerelease: false

      #- name: Upload APK
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: release-apk
      #    path: build/app/outputs/apk/release/app-release.apk
